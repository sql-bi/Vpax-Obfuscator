name: release-obfuscator-cli
on:
  workflow_dispatch:
env:
  PROJECT_NAME: Dax.Vpax.Obfuscator.CLI
  PROJECT_PATH: src/Dax.Vpax.Obfuscator.CLI
  PROJECT_FILE: Dax.Vpax.Obfuscator.CLI.csproj
jobs:
  publish:
    #if: github.ref == 'refs/heads/main'
    runs-on: windows-latest # windows is required for code signing (AzureSignTool)
    permissions:
      contents: write
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: setup dotnet
      uses: actions/setup-dotnet@v5
      with:
        global-json-file: global.json
    - name: nbgv
      uses: dotnet/nbgv@v0.4
      id: nbgv
      with:
        path: ${{ env.PROJECT_PATH }}
    - name: dotnet publish
      run: dotnet publish -c Release -o . -r win-x86 --sc -p:PublishSingleFile=true '${{ env.PROJECT_PATH }}/${{ env.PROJECT_FILE }}'
    - name: dotnet tool install AzureSignTool
      run: dotnet tool install --no-cache --global AzureSignTool
    - name: code signing
      shell: cmd
      run: azuresigntool sign -kvu "${{ secrets.CODESIGNING_VAULT_URL }}" -kvt "${{ secrets.CODESIGNING_TENANT_ID }}" -kvi "${{ secrets.CODESIGNING_CLIENT_ID }}" -kvs "${{ secrets.CODESIGNING_CLIENT_SECRET }}" -kvc "${{ secrets.CODESIGNING_CERTIFICATE }}" -tr "http://timestamp.digicert.com" -v "vpax-obfuscator.exe"
    - name: gh release create
      shell: bash
      run: |
        RELEASE_TAG=${{ env.PROJECT_NAME }}_${{ steps.nbgv.outputs.SemVer2 }}
        PRERELEASE_FLAG=$([[ "${{ steps.nbgv.outputs.PrereleaseVersion }}" != "" ]] && echo "--prerelease" || echo "")
        gh release create $RELEASE_TAG 'vpax-obfuscator.exe#Obfuscator CLI x86 net6.0' --title $RELEASE_TAG --target $GITHUB_SHA --generate-notes --draft $PRERELEASE_FLAG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
